- model_class = Booking
.page-header
  %h1
    %span.glyphicon.glyphicon-save
    =t '.title', default: model_class.model_name.human.pluralize.titleize


.panel.panel-default{style:'max-width: 600px'}
  .panel-heading
    %span.panel-title
      Filter
      = link_to url_for() do
        %span.pull-right{style: 'cursor: pointer'}
          %span.glyphicon.glyphicon-remove-circle
  .panel-body
    = search_form_for @filters, url: search_bookings_path, html: {method: :get } do |f|
      .row
        .col-xs-4
          .form-group
            = f.select :user_id_eq, options_from_collection_for_select(User.order(first_name: :asc).all,"id","name", @filters.user_id_eq), {include_blank: "Benutzer..."}, {class: "form-control", onchange: "this.form.submit();"}
        .col-xs-4
          .form-group
            = f.select :bookable_type_eq, options_from_collection_for_select(Booking.where('bookable_type IS NOT NULL').select(:bookable_type).distinct.group(:bookable_type).all,"bookable_type","bookable_type", @filters.bookable_type_eq), {include_blank: "Buchungstyp..."}, {class: "form-control", onchange: "this.form.submit();"}
        .col-xs-4
          .form-group
            = f.select :created_at_eq, options_for_select(@periods, @period_value), {include_blank: "Zeitraum..."}, {class: "form-control", onchange: "this.form.submit();"}
        .col-xs-12
          .input-group
            = f.text_field :user_first_name_or_user_last_name_cont, placeholder: 'Suche', class:'form-control'
            %span.input-group-btn
              %button.btn.btn-default{type: "submit"}
                %span.glyphicon.glyphicon-search

.btn-toolbar
  = link_to t('.new', default: t("helpers.links.new")), new_booking_path, class:'btn btn-primary'

%table.table.table-striped
  %thead
    %tr
      %th=t '.column.user_name'
      %th=t '.column.bookable'
      %th=t '.column.booking'
      %th=t '.column.amount'
      %th=t 'helpers.created_at'
  %tbody
    - @bookings.each do |booking|
      %tr
        %td= booking.user.name
        %td= booking.bookable_type or t('general.payment')
        - if booking.bookable.is_a? Order
          %td
            - booking.bookable.order_items.each do |item|
              #{item.amount}x #{item.delivery.product.title}
              %br
        - elsif booking.bookable.is_a? Delivery
          %td= booking.bookable.product.title
        - else
          %td= simple_format booking.infotext
        %td= number_to_currency booking.amount, precision: 2
        %td=l booking.created_at.localtime, format: :short

.pagination-centered
  = will_paginate @bookings, {next_label: t('will_paginate.next_level'), previous_label: t('will_paginate.previous_level'), renderer: BootstrapPagination::Rails}