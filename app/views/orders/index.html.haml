- model_class = Order
.page-header
  %h1
    %span.glyphicon.glyphicon-ok
    =t '.title', default: model_class.model_name.human.pluralize.titleize

.panel.panel-default{style:'max-width: 600px'}
  .panel-heading
    %span.panel-title
      Filter
      = link_to url_for() do
        %span.pull-right{style: 'cursor: pointer'}
          %span.glyphicon.glyphicon-remove-circle
  .panel-body
    = search_form_for @filters, url: search_orders_path, html: {method: :get } do |f|
      .row
        .col-xs-4
          .form-group
            = f.select :user_id_eq, options_from_collection_for_select(User.order(first_name: :asc).all,"id","name", @filters.user_id_eq), {include_blank: "Benutzer..."}, {class: "form-control", onchange: "this.form.submit();"}
        .col-xs-4
          .form-group
            = f.select :created_at_eq, options_for_select(@periods, @period_value), {include_blank: "Zeitraum..."}, {class: "form-control", onchange: "this.form.submit();"}
        .col-xs-12
          .input-group
            = f.text_field :user_first_name_or_user_last_name_cont, placeholder: 'Suche', class:'form-control'
            %span.input-group-btn
              %button.btn.btn-default{type: "submit"}
                %span.glyphicon.glyphicon-search

%table.table.table-striped
  %thead
    %tr
      %th=User.human_attribute_name(:name)
      %th=t (".column.amount")
      %th=t '.column.quantity'
      %th=t 'helpers.created_at'
      %th=t 'actions', default: t("helpers.actions")
  %tbody
    - @orders.each do |order|
      %tr
        %td= order.user.name
        %td
          = number_to_currency order.booking.amount, precision: 2
        %td
          - order.order_items.each do |item|
            #{item.amount}x #{item.delivery.product.title}
            %br

        %td=l order.created_at.localtime, format: :long
        %td= link_to t('.destroy', default: t("helpers.links.destroy")), order_path(order), method:  :delete, data:  { confirm:  t('.confirm', default: t("helpers.links.confirm", default: 'Are you sure?')) }, class:'btn btn-sm btn-danger'

.pagination-centered
  = will_paginate @orders, {next_label: t('will_paginate.next_level'), previous_label: t('will_paginate.previous_level'), renderer: BootstrapPagination::Rails}
